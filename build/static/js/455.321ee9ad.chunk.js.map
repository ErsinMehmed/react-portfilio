{"version":3,"file":"static/js/455.321ee9ad.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.1\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","concat","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","createDomVisualElement"],"sourceRoot":""}